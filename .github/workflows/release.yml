name: Build & Publish ASSigner

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Extract __version__ from ASSigner.py
        id: extract_version
        shell: pwsh
        run: |
          $text    = Get-Content -Raw ASSigner.py
          $pattern = '^__version__\s*=\s*["''](?<v>[^"'']+)["'']'
          $match   = [regex]::Match($text, $pattern, 'Multiline')
          if (-not $match.Success) { Write-Error "No __version__" ; exit 1 }
          $ver = $match.Groups['v'].Value
          Write-Host "Parsed version: $ver"
          "ASSIGNER_VER=$ver" | Out-File -Encoding ASCII -Append $Env:GITHUB_ENV

      - name: Show the version
        run: echo "Building ASSigner v${{ env.ASSIGNER_VER }}"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt pyinstaller pyupdater pyupdater-http

      - name: Install Playwright browsers
        run: |
          set PLAYWRIGHT_BROWSERS_PATH=0
          playwright install chromium

      - name: Build ASSigner EXE
        run: pyinstaller ASSigner.spec

      - name: Copy built EXE into PyUpdater files folder
        shell: pwsh
        run: |
          mkdir .\pyu-data\files -Force
          Copy-Item .\dist\ASSigner.exe .\pyu-data\files\ASSigner.exe -Force

      - name: Restore PyUpdater key
        shell: pwsh
        run: |
          mkdir -Force .\.pyupdater\private_keys
          "${{ secrets.PYUPDATER_KEY }}" | Out-File -Encoding ASCII .\.pyupdater\private_keys\key.pem
          icacls .\.pyupdater\private_keys\key.pem /inheritance:r /grant:r "$($Env:USERNAME):R"

      - name: Ensure deploy directory exists
        run: mkdir deploy

      - name: Package update with PyUpdater
        run: pyupdater pkg --app-name "ASSigner" --version ${{ env.ASSIGNER_VER }} --process

      - name: Move PyUpdater output into deploy/
        shell: pwsh
        run: |
          Copy-Item -Path .\pyu-data\deploy\* -Destination .\deploy -Recurse -Force

      - name: Debug deploy folder
        shell: pwsh
        run: |
          Write-Host "Contents of deploy/:"
          Get-ChildItem .\deploy -Recurse | ForEach-Object FullName

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy
          publish_branch: gh-pages
