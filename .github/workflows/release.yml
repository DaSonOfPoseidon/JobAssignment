name: Build & Publish ASSigner

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Extract version from ASSigner.py
        id: extract_version
        shell: pwsh
        run: |
          $text = Get-Content -Raw -Encoding UTF8 ASSigner.py
          Write-Host "Version-related lines:"
          $text -split "`n" | Where-Object { $_ -match 'version' } | ForEach-Object { Write-Host $_ }
          if ($text -match '^\s*__version__\s*=\s*["'']([^"'']+)["'']' -m) {
            Write-Output "VERSION_ASSIGNER=$($matches[1])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            throw "Could not find __version__ in ASSigner.py"
          }

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyupdater pyupdater-http

      - name: Install Playwright browsers
        shell: pwsh
        run: |
          $Env:PLAYWRIGHT_BROWSERS_PATH = "0"
          playwright install chromium

      - name: PyUpdater build
        shell: pwsh
        env:
          VERSION_ASSIGNER: ${{ env.VERSION_ASSIGNER }}
        run: |
          pyupdater build --console --app-version=$env:VERSION_ASSIGNER ASSigner.py

      - name: Debug pyu-data/new contents
        shell: pwsh
        run: |
          Write-Host ">>> pyu-data/new contents:"
          Get-ChildItem .\pyu-data\new -Recurse | ForEach-Object FullName

      - name: PyUpdater package
        run: pyupdater pkg --app-name ASSigner --process --debug

      - name: Debug pyu-data/deploy contents
        shell: pwsh
        run: |
          Write-Host ">>> pyu-data/deploy contents:"
          Get-ChildItem .\pyu-data\deploy -Recurse | ForEach-Object FullName

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pyu-data/deploy
          publish_branch: gh-pages
