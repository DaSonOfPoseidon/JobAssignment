name: Build & Publish ASSigner

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with: { python-version: '3.11' }

      - name: Extract version
        id: extract_version
        shell: pwsh
        run: |
          $m = [regex]::Match((Get-Content -Raw ASSigner.py),
               '^__version__\s*=\s*["''](?<v>[^"'']+)["'']','Multiline');
          if (-not $m.Success) { throw "No __version__" }
          "ASSIGNER_VER=$($m.Groups['v'].Value)" |
            Out-File -Encoding ASCII -Append $Env:GITHUB_ENV

      - name: Install deps
        run: pip install --upgrade pip && pip install -r requirements.txt pyupdater pyupdater-http

      - name: Install Playwright browsers
        run: cmd /c "set PLAYWRIGHT_BROWSERS_PATH=0 && playwright install chromium"

      - name: PyUpdater build
        run: pyupdater build --console --app-version ${{ env.ASSIGNER_VER }} ASSigner.py

      - name: Restore PyUpdater key
        shell: pwsh
        run: |
          mkdir .\.pyupdater\private_keys -Force;
          "${{ secrets.PYUPDATER_KEY }}" |
            Out-File -Encoding ASCII .\.pyupdater\private_keys\key.pem;
          icacls .\.pyupdater\private_keys\key.pem /inheritance:r /grant:r "$($Env:USERNAME):R"

      - name: PyUpdater package & sign
        run: pyupdater pkg --process --sign --debug

      - name: Debug deploy artifacts
        shell: pwsh
        run: Write-Host ">>> pyu-data/deploy contents:"; Get-ChildItem .\pyu-data\deploy -Recurse | ForEach-Object FullName

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pyu-data/deploy
          publish_branch: gh-pages
